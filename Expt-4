NAME: S. Vishwak
REGISTER NO.:230701385

EX-4: Implementation of Stack using Array and Linked List 

#include<stdio.h>
#include<stdlib.h>

struct node 
{
    int data;
    struct node *link;
}*first=NULL;

//Stack using Arrays

int size=5;
int Top=-1;
int stack[5];
void push(int);
int pop();
int peek();
void display();
int isEmpty();
int isFull();

int isEmpty()
{
    if(Top==-1)
    return 1;
    else 
    return 0;
}

int isFull(){
    if(Top==size-1)
        return 1;
    else
    return 0;
}

void push(int data)
{
    if(isFull()){
        printf("\nOverflow");
    }
    else
    Top=Top+1;
    stack[Top]=data;
}

int pop()
{
    int temp;
    if(isEmpty()){
        printf("\nNo data in stack");
    }
    else{
    temp=stack[Top];
    Top=Top-1;
    printf("\n%d is the popped element",temp);
}
}

int peek()
{
    if(isEmpty()){
        printf("\nNo element in stack");
    }
    else
    printf("\n%d is the top most element",stack[Top]);
}

void display()
{
     if(isEmpty()){
        printf("\nNo element in stack");
    }
    else{
    for(int i=Top;i>-1;i--){
        printf("%d ",stack[i]);
    }
}
}

//Stack using Linked list

void push_beg(int);
void pop_beg();
void Peek();
void display1();

void push_beg(int data)
{
    struct node *newnode;
    newnode=(struct node*)malloc(sizeof(struct node));
    newnode->data=data;
    if(first==NULL){
        newnode->link=NULL;
        first=newnode;
    }
    else
    {
        newnode->link=first;
        first=newnode;
    }
    printf("Data inserted\n");
}

void pop_beg()
{
    struct node *temp=NULL;
    temp=first;
    if(first==NULL){
    printf("INVALID OPERATION");
    }
    else{
        printf("\n%d is the popped element",temp->data);
        first=temp->link;
        free(temp);
        temp=NULL;
    }
}

void Peek()
{
    if(first!=NULL)
    printf("%d is the top element",first->data);
    else
    printf("\nNo data inside");

}

void display1()
{
{
    struct node *temp=NULL;
    temp=first;
    if(temp!=NULL){
        while(temp!=NULL)
    {
        printf("%d ",temp->data);
        temp=temp->link;
    }
}
else{
    printf("\nNo data inside");
}
}
}

int main()
{
    int ch,ch1,n;
    printf("MENU DRIVEN PROGRAM:\n");
    printf("0. Exit\n");
    printf("1. Stack using array\n");
    printf("2. Stack using Linked List\n");
    while(1){
    printf("\nChoose the mode of operation : ");
    scanf("%d",&ch1);
    if(ch1==0)
    break;
    else if(ch1==1||ch1==2){
    printf("0. Exit\n");
    printf("1. Push\n");
    printf("2. Pop\n");
    printf("3. Return Top element\n");
    printf("4. Display\n");
    }
    if(ch1==1){
    while(1){
    printf("\nEnter your choice :  ");
    scanf("%d",&ch);
    switch (ch)
    {
    case 1:
    printf("\nEnter data to push : ");
    scanf("%d",&n);
    push(n);
    break;

    case 2:
    pop();
    break;

    case 3:
    peek();
    break;

    case 4:
    display();
    break;

    default:
    printf("\nMENU EXITED");
    break;
    }
    if(ch==0){
        break;
    }
    else{ 
    continue;
    }
}
    }
    else if(ch1==2){
    while(1){
    printf("\nEnter your choice :  ");
    scanf("%d",&ch);
    switch (ch)
    {
    case 1:
    printf("\nEnter data to push : ");
    scanf("%d",&n);
    push_beg(n);
    break;

    case 2:
    pop_beg();
    break;

    case 3:
    Peek();
    break;

    case 4:
    display1();
    break;

    default:
    printf("\nMENU EXITED");
    break;
    }
    if(ch==0){
        break;
    }
    else{ 
    continue;
    }
  }
    }
}
printf("\nProgram exited");
return 0;
}
