NAME: S. Vishwak
REGISTER NO.:230701385

EX-7: Implementation of Queue using Array and Linked list

#include<stdio.h>
#include<stdlib.h>
#define size 10
int stack[size];
int rear=-1,front=-1;

int isEmpty();
int isFull();
void enque(int);
void deque();
void display();

int isEmpty()
{
    if(rear==-1)
    return 1;
    else 
    return 0;
}

int isFull(){
    if(rear==size-1)
        return 1;
    else
    return 0;
}

void enque(int data)
{
    if(!isFull())
    {
        if(front==-1){
        front=0;
        }
        rear+=1;
        stack[rear]=data;
    }
    else{
        printf("\nOverflow");
    }
}

void deque()
{
    int temp;
    if(!isEmpty()){
    temp=stack[front];
    front+=1;
    }
    else{
        printf("\nUnderflow");
    }
}

void display()
{
    if(!isEmpty())
    {
        int temp=front;
        while(temp<=rear){
            printf("%d ",stack[temp]);
            temp+=1;
        }
    }
    else{
        printf("\nNo data");
    }
}

struct node
{
    int data;
    struct node *link;
}*f,*r;

void enq_end(int);
void deq_beg();
void displayl();

void enq_end(int data)
{
    struct node *newnode,*temp;
    temp=f;
    newnode=(struct node*)malloc(sizeof(struct node));
    newnode->data=data;
    if(f==NULL)
    {
        newnode->link=NULL;
        f=newnode;
        r=newnode;
    }
    else
    {
        while(temp->link!=0)
        {
            temp=temp->link;
        }
            newnode->link=NULL;
            temp->link=newnode;
            r=newnode;
    }
}

void display1()
{
    struct node *temp=NULL;
    temp=f;
    if(temp!=NULL){
        while(temp!=NULL)
    {
        printf("%d ",temp->data);
        temp=temp->link;
    }
}
else{
    printf("\nNo data inside");
}
}

void deq_beg()
{
    struct node *temp=NULL;
    temp=f;
    if(f==NULL){
    printf("INVALID OPERATION");
    }
    else{
        f=temp->link;
        free(temp);
        temp=NULL;
    }
}

int main()
{
    int ch,ch1,n;
    printf("MENU DRIVEN PROGRAM:\n");
    printf("0. Exit\n");
    printf("1. Queue using array\n");
    printf("2. Queue using Linked List\n");
    while(1){
    printf("\nChoose the mode of operation : ");
    scanf("%d",&ch1);
    if(ch1==0)
    break;
    else if(ch1==1||ch1==2){
    printf("0. Exit\n");
    printf("1. Enqueue\n");
    printf("2. Dequeue\n");
    printf("3. Display\n");
    }
    if(ch1==1){
    while(1){
    printf("\nEnter your choice :  ");
    scanf("%d",&ch);
    switch (ch)
    {
    case 1:
    printf("\nEnter data to enqueue : ");
    scanf("%d",&n);
    enque(n);
    break;

    case 2:
    deque();
    break;
    
    case 3:
    display();
    break;

    default:
    printf("\nMENU EXITED");
    break;
    }
    if(ch==0){
        break;
    }
    else{ 
    continue;
    }
}
    }
    else if(ch1==2){
    while(1){
    printf("\nEnter your choice :  ");
    scanf("%d",&ch);
    switch (ch)
    {
    case 1:
    printf("\nEnter data to enqueue : ");
    scanf("%d",&n);
    enq_end(n);
    break;

    case 2:
    deq_beg();
    break;

    case 3:
    display1();
    break;

    default:
    printf("\nMENU EXITED");
    break;
    }
    if(ch==0){
        break;
    }
    else{ 
    continue;
    }
  }
    }
}
printf("\nProgram exited");
return 0;
}
